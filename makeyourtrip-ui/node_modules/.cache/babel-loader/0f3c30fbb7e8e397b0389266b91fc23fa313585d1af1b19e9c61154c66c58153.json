{"ast":null,"code":"var _jsxFileName = \"E:\\\\big_bang_assesment_tourism\\\\makeyourtrip-ui\\\\src\\\\components\\\\component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { IKContext, IKImage, IKUpload } from 'imagekitio-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst app = express();\napp.get('/auth', (req, res) => {\n  const response = {\n    signature: 'your-mock-signature',\n    token: 'your-mock-token',\n    expire: 'mock-expiry-timestamp'\n  };\n  res.json(response);\n});\napp.listen(3000, () => {\n  console.log('Mock authentication server is running on port 3000');\n});\nconst ImageUpload = () => {\n  _s();\n  const [uploadedFileURL, setUploadedFileURL] = useState('');\n  const handleFileUpload = response => {\n    if (response.success) {\n      // The uploaded file's URL will be available in the `response.url` property.\n      setUploadedFileURL(response.url);\n      alert('File uploaded successfully!');\n    } else {\n      alert('File upload failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IKContext, {\n      publicKey: \"public_hzGjC6kUjUGsbckeI6CG7BEKQWc=\",\n      urlEndpoint: \"https://ik.imagekit.io/kntuxq9n5\",\n      transformationPosition: \"path\",\n      authenticationEndpoint: \"http://localhost:3000/\",\n      children: [/*#__PURE__*/_jsxDEV(IKImage, {\n        path: \"/body-language.jpg\",\n        transformation: [{\n          height: '300',\n          width: '400'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IKUpload, {\n        fileName: \"my-upload\",\n        onError: error => console.error('Upload error:', error),\n        onSuccess: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), uploadedFileURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded File URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: uploadedFileURL,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: uploadedFileURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"n4XFz2tTPhTJp46md/f2LeWhHAE=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","IKContext","IKImage","IKUpload","jsxDEV","_jsxDEV","express","require","app","get","req","res","response","signature","token","expire","json","listen","console","log","ImageUpload","_s","uploadedFileURL","setUploadedFileURL","handleFileUpload","success","url","alert","children","publicKey","urlEndpoint","transformationPosition","authenticationEndpoint","path","transformation","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onError","error","onSuccess","href","target","rel","_c","$RefreshReg$"],"sources":["E:/big_bang_assesment_tourism/makeyourtrip-ui/src/components/component.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { IKContext, IKImage, IKUpload } from 'imagekitio-react';\r\n\r\nconst express = require('express');\r\nconst app = express();\r\n\r\napp.get('/auth', (req, res) => {\r\n  const response = {\r\n    signature: 'your-mock-signature',\r\n    token: 'your-mock-token',\r\n    expire: 'mock-expiry-timestamp'\r\n  };\r\n  \r\n  res.json(response);\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log('Mock authentication server is running on port 3000');\r\n});\r\n\r\nconst ImageUpload = () => {\r\n  const [uploadedFileURL, setUploadedFileURL] = useState('');\r\n\r\n  const handleFileUpload = (response) => {\r\n    if (response.success) {\r\n      // The uploaded file's URL will be available in the `response.url` property.\r\n      setUploadedFileURL(response.url);\r\n      alert('File uploaded successfully!');\r\n    } else {\r\n      alert('File upload failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IKContext\r\n        publicKey=\"public_hzGjC6kUjUGsbckeI6CG7BEKQWc=\"\r\n        urlEndpoint=\"https://ik.imagekit.io/kntuxq9n5\"\r\n        transformationPosition=\"path\"\r\n        authenticationEndpoint=\"http://localhost:3000/\"\r\n      >\r\n        {/* Image component */}\r\n        <IKImage\r\n          path=\"/body-language.jpg\"\r\n          transformation={[{ height: '300', width: '400' }]}\r\n        />\r\n\r\n        {/* Image upload */}\r\n        <IKUpload\r\n          fileName=\"my-upload\"\r\n          onError={(error) => console.error('Upload error:', error)}\r\n          onSuccess={handleFileUpload}\r\n        />\r\n      </IKContext>\r\n\r\n      {/* Display the uploaded file's URL */}\r\n      {uploadedFileURL && (\r\n        <div>\r\n          <h2>Uploaded File URL:</h2>\r\n          <a href={uploadedFileURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {uploadedFileURL}\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,CAAC,CAAC;AAErBE,GAAG,CAACC,GAAG,CAAC,OAAO,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,MAAMC,QAAQ,GAAG;IACfC,SAAS,EAAE,qBAAqB;IAChCC,KAAK,EAAE,iBAAiB;IACxBC,MAAM,EAAE;EACV,CAAC;EAEDJ,GAAG,CAACK,IAAI,CAACJ,QAAQ,CAAC;AACpB,CAAC,CAAC;AAEFJ,GAAG,CAACS,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBC,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;AACnE,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMwB,gBAAgB,GAAIZ,QAAQ,IAAK;IACrC,IAAIA,QAAQ,CAACa,OAAO,EAAE;MACpB;MACAF,kBAAkB,CAACX,QAAQ,CAACc,GAAG,CAAC;MAChCC,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,MAAM;MACLA,KAAK,CAAC,uCAAuC,CAAC;IAChD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACJ,SAAS;MACR4B,SAAS,EAAC,qCAAqC;MAC/CC,WAAW,EAAC,kCAAkC;MAC9CC,sBAAsB,EAAC,MAAM;MAC7BC,sBAAsB,EAAC,wBAAwB;MAAAJ,QAAA,gBAG/CvB,OAAA,CAACH,OAAO;QACN+B,IAAI,EAAC,oBAAoB;QACzBC,cAAc,EAAE,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAM,CAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAGFnC,OAAA,CAACF,QAAQ;QACPkC,QAAQ,EAAC,WAAW;QACpBI,OAAO,EAAGC,KAAK,IAAKxB,OAAO,CAACwB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAE;QAC1DC,SAAS,EAAEnB;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,EAGXlB,eAAe,iBACdjB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAI;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BnC,OAAA;QAAGuC,IAAI,EAAEtB,eAAgB;QAACuB,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAlB,QAAA,EAChEN;MAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA9CID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}