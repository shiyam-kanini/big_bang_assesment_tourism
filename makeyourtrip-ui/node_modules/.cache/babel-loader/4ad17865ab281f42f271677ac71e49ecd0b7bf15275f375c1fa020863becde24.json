{"ast":null,"code":"var _jsxFileName = \"E:\\\\big_bang_assesment_tourism\\\\makeyourtrip-ui\\\\src\\\\components\\\\component.jsx\",\n  _s = $RefreshSig$();\n// UploadPhotos.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// config.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CLIENT_ID = 'your_client_id'; // Replace with your actual client ID\nexport const CLIENT_SECRET = 'your_client_secret'; // Replace with your actual client secret\nexport const REDIRECT_URI = 'http://localhost:3000/redirect'; // Replace with your actual redirect URI\n\nconst UploadPhotos = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get('code');\n    if (authorizationCode) {\n      exchangeAuthorizationCodeForToken(authorizationCode);\n    }\n  }, []);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const exchangeAuthorizationCodeForToken = async code => {\n    try {\n      const tokenResponse = await axios.post('https://oauth2.googleapis.com/token', null, {\n        params: {\n          code: code,\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET,\n          redirect_uri: REDIRECT_URI,\n          grant_type: 'authorization_code'\n        }\n      });\n      if (tokenResponse.data && tokenResponse.data.access_token) {\n        const accessToken = tokenResponse.data.access_token;\n        setAccessToken(accessToken);\n      }\n    } catch (error) {\n      console.error('Error exchanging authorization code for token:', error);\n      alert('An error occurred during the token exchange.');\n    }\n  };\n  const handleUpload = async () => {\n    if (selectedFile && accessToken) {\n      try {\n        const headers = {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-type': 'application/octet-stream',\n          'X-Goog-Upload-Content-Type': selectedFile.type,\n          'X-Goog-Upload-Protocol': 'raw'\n        };\n        const uploadResponse = await axios.post('https://photoslibrary.googleapis.com/v1/uploads', selectedFile, {\n          headers: headers\n        });\n        if (uploadResponse.data) {\n          alert('Image uploaded successfully!');\n\n          // Now you can use the upload token to create a media item if needed\n        }\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        alert('An error occurred while uploading the image.');\n      }\n    } else {\n      alert('Please select an image and complete the OAuth flow to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload to Google Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPhotos, \"0D5LNbxW4Et9dkNuDmECn7RDCwc=\");\n_c = UploadPhotos;\nexport default UploadPhotos;\nvar _c;\n$RefreshReg$(_c, \"UploadPhotos\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","REDIRECT_URI","UploadPhotos","_s","selectedFile","setSelectedFile","accessToken","setAccessToken","urlParams","URLSearchParams","window","location","search","authorizationCode","get","exchangeAuthorizationCodeForToken","handleFileChange","event","target","files","code","tokenResponse","post","params","client_id","client_secret","redirect_uri","grant_type","data","access_token","error","console","alert","handleUpload","headers","Authorization","type","uploadResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/big_bang_assesment_tourism/makeyourtrip-ui/src/components/component.jsx"],"sourcesContent":["// UploadPhotos.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// config.js\r\nexport const CLIENT_ID = 'your_client_id'; // Replace with your actual client ID\r\nexport const CLIENT_SECRET = 'your_client_secret'; // Replace with your actual client secret\r\nexport const REDIRECT_URI = 'http://localhost:3000/redirect'; // Replace with your actual redirect URI\r\n\r\n\r\n\r\nconst UploadPhotos = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const authorizationCode = urlParams.get('code');\r\n\r\n    if (authorizationCode) {\r\n      exchangeAuthorizationCodeForToken(authorizationCode);\r\n    }\r\n  }, []);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const exchangeAuthorizationCodeForToken = async (code) => {\r\n    try {\r\n      const tokenResponse = await axios.post(\r\n        'https://oauth2.googleapis.com/token',\r\n        null,\r\n        {\r\n          params: {\r\n            code: code,\r\n            client_id: CLIENT_ID,\r\n            client_secret: CLIENT_SECRET,\r\n            redirect_uri: REDIRECT_URI,\r\n            grant_type: 'authorization_code',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (tokenResponse.data && tokenResponse.data.access_token) {\r\n        const accessToken = tokenResponse.data.access_token;\r\n        setAccessToken(accessToken);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error exchanging authorization code for token:', error);\r\n      alert('An error occurred during the token exchange.');\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFile && accessToken) {\r\n      try {\r\n        const headers = {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          'Content-type': 'application/octet-stream',\r\n          'X-Goog-Upload-Content-Type': selectedFile.type,\r\n          'X-Goog-Upload-Protocol': 'raw',\r\n        };\r\n\r\n        const uploadResponse = await axios.post(\r\n          'https://photoslibrary.googleapis.com/v1/uploads',\r\n          selectedFile,\r\n          {\r\n            headers: headers,\r\n          }\r\n        );\r\n\r\n        if (uploadResponse.data) {\r\n          alert('Image uploaded successfully!');\r\n\r\n          // Now you can use the upload token to create a media item if needed\r\n        }\r\n      } catch (error) {\r\n        console.error('Error uploading image:', error);\r\n        alert('An error occurred while uploading the image.');\r\n      }\r\n    } else {\r\n      alert('Please select an image and complete the OAuth flow to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload to Google Photos</h1>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPhotos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}