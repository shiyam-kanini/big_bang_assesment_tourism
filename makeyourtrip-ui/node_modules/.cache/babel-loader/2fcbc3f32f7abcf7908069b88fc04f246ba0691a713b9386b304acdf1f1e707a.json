{"ast":null,"code":"var _jsxFileName = \"E:\\\\big_bang_assesment_tourism\\\\makeyourtrip-ui\\\\src\\\\components\\\\component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GooglePhotosUploadComponent = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      try {\n        const accessToken = 'your_access_token'; // Replace with your actual access token\n        const mimeType = selectedFile.type;\n        const initiateUploadResponse = await axios.post('https://photoslibrary.googleapis.com/v1/uploads', selectedFile, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            'Content-Type': 'application/octet-stream',\n            'X-Goog-Upload-Content-Type': mimeType,\n            'X-Goog-Upload-Protocol': 'raw'\n          }\n        });\n        const uploadToken = initiateUploadResponse.data;\n\n        // Now use the upload token to create a media item\n        const createMediaItemResponse = await axios.post('https://photoslibrary.googleapis.com/v1/mediaItems', {\n          newMediaItems: [{\n            description: 'Uploaded via React app',\n            simpleMediaItem: {\n              uploadToken\n            }\n          }]\n        }, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        alert('File uploaded successfully to Google Photos!');\n      } catch (error) {\n        console.error('Error uploading file to Google Photos:', error);\n        alert('An error occurred while uploading the file.');\n      }\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Photos Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GooglePhotosUploadComponent, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = GooglePhotosUploadComponent;\nexport default GooglePhotosUploadComponent;\nvar _c;\n$RefreshReg$(_c, \"GooglePhotosUploadComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GooglePhotosUploadComponent","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","accessToken","mimeType","type","initiateUploadResponse","post","headers","Authorization","uploadToken","data","createMediaItemResponse","newMediaItems","description","simpleMediaItem","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/big_bang_assesment_tourism/makeyourtrip-ui/src/components/component.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GooglePhotosUploadComponent = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFile) {\r\n      try {\r\n        const accessToken = 'your_access_token'; // Replace with your actual access token\r\n        const mimeType = selectedFile.type;\r\n\r\n        const initiateUploadResponse = await axios.post(\r\n          'https://photoslibrary.googleapis.com/v1/uploads',\r\n          selectedFile,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n              'Content-Type': 'application/octet-stream',\r\n              'X-Goog-Upload-Content-Type': mimeType,\r\n              'X-Goog-Upload-Protocol': 'raw',\r\n            },\r\n          }\r\n        );\r\n\r\n        const uploadToken = initiateUploadResponse.data;\r\n\r\n        // Now use the upload token to create a media item\r\n        const createMediaItemResponse = await axios.post(\r\n          'https://photoslibrary.googleapis.com/v1/mediaItems',\r\n          {\r\n            newMediaItems: [\r\n              {\r\n                description: 'Uploaded via React app',\r\n                simpleMediaItem: {\r\n                  uploadToken,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        alert('File uploaded successfully to Google Photos!');\r\n      } catch (error) {\r\n        console.error('Error uploading file to Google Photos:', error);\r\n        alert('An error occurred while uploading the file.');\r\n      }\r\n    } else {\r\n      alert('Please select a file to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Google Photos Upload</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GooglePhotosUploadComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,2BAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIN,YAAY,EAAE;MAChB,IAAI;QACF,MAAMO,WAAW,GAAG,mBAAmB,CAAC,CAAC;QACzC,MAAMC,QAAQ,GAAGR,YAAY,CAACS,IAAI;QAElC,MAAMC,sBAAsB,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC7C,iDAAiD,EACjDX,YAAY,EACZ;UACEY,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,WAAY,EAAC;YACtC,cAAc,EAAE,0BAA0B;YAC1C,4BAA4B,EAAEC,QAAQ;YACtC,wBAAwB,EAAE;UAC5B;QACF,CACF,CAAC;QAED,MAAMM,WAAW,GAAGJ,sBAAsB,CAACK,IAAI;;QAE/C;QACA,MAAMC,uBAAuB,GAAG,MAAMrB,KAAK,CAACgB,IAAI,CAC9C,oDAAoD,EACpD;UACEM,aAAa,EAAE,CACb;YACEC,WAAW,EAAE,wBAAwB;YACrCC,eAAe,EAAE;cACfL;YACF;UACF,CAAC;QAEL,CAAC,EACD;UACEF,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,WAAY;UACvC;QACF,CACF,CAAC;QAEDa,KAAK,CAAC,8CAA8C,CAAC;MACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9DD,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B9B,OAAA;MAAOY,IAAI,EAAC,MAAM;MAACmB,QAAQ,EAAE1B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD9B,OAAA;MAAQgC,OAAO,EAAEvB,YAAa;MAAAiB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAjEID,2BAA2B;AAAAgC,EAAA,GAA3BhC,2BAA2B;AAmEjC,eAAeA,2BAA2B;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}