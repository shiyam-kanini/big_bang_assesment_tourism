{"ast":null,"code":"import api from \"../../api/api\";\nconst PLACE_GET_ALL_PLACES_URL = 'Place/actions/getallplaces';\nconst PLACE_POST_URL = 'Place/actions/addplace';\nconst PLACE_POST_IMAGES_URL = 'Place/actions/addplaceimages';\nconst PLACE_POST_PLACE_FESTIVALS_URL = 'Place/actions/addplacefestivals';\nconst PLACE_DELETE_URL = 'Place/actions/deleteplace';\nconst PLACE_DELETE_PLACE_FESTIVAL_URL = 'Place/actions/deleteplacefestival';\nconst PLACE_DELETE_IMAGE_URL = 'Place/actions/deleteplaceimage';\nconst getAllPlaces = async () => {\n  try {\n    const response = await api.get(PLACE_GET_ALL_PLACES_URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst postPlace = async data => {\n  try {\n    const response = await api.post(PLACE_POST_URL, data, {\n      headers: {\n        \"Content-Type\": 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst postPlaceImages = async data => {\n  try {\n    const response = await api.post(PLACE_POST_IMAGES_URL, data, {\n      headers: {\n        \"Content-Type\": 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst postPlaceFestivals = async data => {\n  try {\n    const response = await api.post(PLACE_POST_PLACE_FESTIVALS_URL, data, {\n      headers: {\n        \"Content-Type\": 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst deletePlace = async id => {\n  try {\n    const response = await api.delete(`${PLACE_DELETE_URL}?placeId=${id}`, {\n      headers: {\n        \"Content-Type\": 'text-plain'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst deletePlaceImage = async id => {\n  try {\n    const response = await api.delete(`${PLACE_DELETE_IMAGE_URL}?id=${id}`, {\n      headers: {\n        \"Content-Type\": 'text-plain'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nconst deletePlaceFestival = async id => {\n  try {\n    const response = await api.delete(`${PLACE_DELETE_PLACE_FESTIVAL_URL}?id=${id}`, {\n      headers: {\n        \"Content-Type\": 'text-plain'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nexport { getAllPlaces, postPlace, postPlaceFestivals, postPlaceImages, deletePlace, deletePlaceImage, deletePlaceFestival };","map":{"version":3,"names":["api","PLACE_GET_ALL_PLACES_URL","PLACE_POST_URL","PLACE_POST_IMAGES_URL","PLACE_POST_PLACE_FESTIVALS_URL","PLACE_DELETE_URL","PLACE_DELETE_PLACE_FESTIVAL_URL","PLACE_DELETE_IMAGE_URL","getAllPlaces","response","get","data","error","postPlace","post","headers","postPlaceImages","postPlaceFestivals","deletePlace","id","delete","deletePlaceImage","deletePlaceFestival"],"sources":["E:/big_bang_assesment_tourism/makeyourtrip-ui/src/services/travelagentServices/placeService.jsx"],"sourcesContent":["import api from \"../../api/api\";\r\n\r\nconst PLACE_GET_ALL_PLACES_URL = 'Place/actions/getallplaces'\r\nconst PLACE_POST_URL = 'Place/actions/addplace'\r\nconst PLACE_POST_IMAGES_URL = 'Place/actions/addplaceimages'\r\nconst PLACE_POST_PLACE_FESTIVALS_URL = 'Place/actions/addplacefestivals'\r\nconst PLACE_DELETE_URL = 'Place/actions/deleteplace'\r\nconst PLACE_DELETE_PLACE_FESTIVAL_URL = 'Place/actions/deleteplacefestival'\r\nconst PLACE_DELETE_IMAGE_URL = 'Place/actions/deleteplaceimage'\r\n\r\nconst getAllPlaces = async () => {\r\n    try{\r\n        const response = await api.get(PLACE_GET_ALL_PLACES_URL)\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\nconst postPlace = async(data) => {\r\n    try{\r\n        const response = await api.post(PLACE_POST_URL, data, {\r\n            headers : {\r\n                \"Content-Type\":'application/json'\r\n            }\r\n        })\r\n        return response.data\r\n\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\nconst postPlaceImages = async(data) => {\r\n    try{\r\n        const response = await api.post(PLACE_POST_IMAGES_URL, data, {\r\n            headers : {\r\n                \"Content-Type\":'application/json'\r\n            }\r\n        })\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\nconst postPlaceFestivals = async(data) => {\r\n    try{\r\n        const response = await api.post(PLACE_POST_PLACE_FESTIVALS_URL, data, {\r\n            headers : {\r\n                \"Content-Type\":'application/json'\r\n            }\r\n        })\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\nconst deletePlace = async(id) => {\r\n    try{\r\n        const response = await api.delete(`${PLACE_DELETE_URL}?placeId=${id}`, {\r\n            headers : {\r\n                \"Content-Type\":'text-plain'\r\n            }\r\n        })\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\nconst deletePlaceImage = async(id) => {\r\n    try{\r\n        const response = await api.delete(`${PLACE_DELETE_IMAGE_URL}?id=${id}`, {\r\n            headers : {\r\n                \"Content-Type\":'text-plain'\r\n            }\r\n        })\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\nconst deletePlaceFestival = async(id) => {\r\n    try{\r\n        const response = await api.delete(`${PLACE_DELETE_PLACE_FESTIVAL_URL}?id=${id}`, {\r\n            headers : {\r\n                \"Content-Type\":'text-plain'\r\n            }\r\n        })\r\n        return response.data\r\n    }\r\n    catch(error){\r\n        return error\r\n    }\r\n}\r\n\r\nexport {getAllPlaces, postPlace, postPlaceFestivals, postPlaceImages, deletePlace, deletePlaceImage, deletePlaceFestival}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}